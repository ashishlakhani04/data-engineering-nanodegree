
Glossary of Key Terms You Will Learn in this Lesson


Kafka Connect - A web server and framework for integrating Kafka with external data sources such as SQL databases, log files, and HTTP endpoints.
JAR - Java ARchive. Used to distribute Java code reusably in a library format under a single file.
Connector - A JAR built on the Kafka Connect framework which integrates to an external system to either source or sink data from Kafka
Source - A Kafka client putting data into Kafka from an external location, such as a data store
Sink - A Kafka client removing data from Kafka into an external location, such as a data store
JDBC - Java Database Connectivity. A Java programming abstraction over SQL database interactions.
Task - Responsible for actually interacting with and moving data within a Kafka connector. One or more tasks make up a connector.
Kafka REST Proxy - A web server providing APIs for producing and consuming from Kafka, as well as fetching cluster metadata.




Kafka Connect is a framework, written in Java, which:

allows developers to build an integration once
then use it repeatedly with just a bit of configuration
makes it possible to avoid integrating Kafka client code into your applications entirely



The Connect Framework
Kafka Connect plugins are similar to the Kafka consumers and producers youâ€™ve already built!

At a high level, every Kafka Connect plugin defines a few things.

Connectors: which are a high-level abstraction responsible for managing tasks
Tasks: contain the code that specifically manages how data should be produced into or consumed out of Kafka
Converters: which are responsible for defining the mapping between the source or destination system and Kafka Connect and can be used to turn data into Avro or JSON

https://docs.confluent.io/platform/current/connect/concepts.html#kconnect-long-concepts


Kafka Connect REST API
Your Connector configuration can be Created, Updated, Deleted and Read (CRUD) via a REST API
You can check the status of a specific Connectors task(s) via the API
You can start, stop, and restart Connectors via the API
The choice of a REST API provides a wide-array of integration and management opportunities

https://docs.confluent.io/platform/current/connect/references/restapi.html#kconnect-cluster